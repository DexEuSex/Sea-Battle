<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>